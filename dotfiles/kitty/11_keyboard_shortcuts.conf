################################################################################
##  Keyboard shortcuts                                                        ##
################################################################################

# For a list of key names, see: the GLFW key macros
# <https://github.com/kovidgoyal/kitty/blob/master/glfw/glfw3.h#L349>.
# The name to use is the part after the GLFW_KEY_ prefix. For a list of modifier
# names, see: GLFW mods <https://www.glfw.org/docs/latest/group__mods.html>

# On Linux you can also use XKB key names to bind keys that are not supported by
# GLFW. See XKB keys
# <https://github.com/xkbcommon/libxkbcommon/blob/master/xkbcommon/xkbcommon-
# keysyms.h> for a list of key names. The name to use is the part after the
# XKB_KEY_ prefix. Note that you can only use an XKB key name for keys that are
# not known as GLFW keys.

# Finally, you can use raw system key codes to map keys, again only for keys
# that are not known as GLFW keys. To see the system key code for a key, start
# kitty with the kitty --debug-keyboard option.
# Then kitty will output some debug text for every key event. In that text look
# for ``native_code`` the value of that becomes the key name in the shortcut.
# For example:
# on_key_input: glfw key: 65 native_code: 0x61 action: PRESS mods: 0x0 text: 'a'

# Here, the key name for the A key is 0x61 and you can use it with:
#map ctrl+0x61 something
# to map ctrl+a to something.

# You can use the special action no_op to unmap a keyboard shortcut that is
# assigned in the default configuration:
#map kitty_mod+space no_op

# You can combine multiple actions to be triggered by a single shortcut, using
# the syntax below:
#map key combine <separator> action1 <separator> action2 <separator> action3 ...
# For example:
#map kitty_mod+e combine : new_window : next_layout
# this will create a new window and switch to the next available layout

# You can use multi-key shortcuts using the syntax shown below:
#map key1>key2>key3 action
# For example:
#map ctrl+f>2 set_font_size 20

# The value of kitty_mod is used as the modifier for all default shortcuts, you
# can change it in your kitty.conf to change the modifiers for all the default
# shortcuts.
kitty_mod ctrl+shift

# You can have kitty remove all shortcut definition seen up to this point.
# Useful, for instance, to remove the default shortcuts.
clear_all_shortcuts no

# You can create aliases for kitten names, this allows overriding the defaults
# for kitten options and can also be used to shorten repeated mappings of the
# same kitten with a specific group of options. For example, the alias below
# changes the default value of kitty +kitten hints --hints-offset to zero for
# all mappings, including the builtin ones.
#kitten_alias hints hints --hints-offset=0
